@model DashboardViewModel

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <title>Line Chart</title>
</head>
<body>
    <style>
        /* Adjust the height of the chart container */
        #chartContainer {
            height: calc(100vh - 140px); /* subtract the height of the navbar and the dropdown menu */
            margin-top: 20px;
        }
        #originDropdown {
            height: 40px;
        }

        input[type="radio"] {
            margin-left: 10px; /* Adjust the value as needed */
        }
    </style>

    <div class="dropDownMenu">
        <div class="form-group">
            <select id="originDropdown" asp-for="Origin" asp-items="@new SelectList(Model.Origins)" class="form-select"></select>
        </div>
    </div>

    <div class="timeframeForm">
        <input type="radio" id="lastHour" name="timeframe" value="1"> <label for="lastHour">Letzte Stunde</label>
        <input type="radio" id="today" name="timeframe" value="2" checked> <label for="today">Heute</label>
        <input type="radio" id="1day" name="timeframe" value="3"> <label for="1day">Letzte 24 Stunden</label>
        <input type="radio" id="thisWeek" name="timeframe" value="4"> <label for="thisWeek">Diese Woche</label>
        <input type="radio" id="1month" name="timeframe" value="5"> <label for="1month">Letzten 30 Tage</label>
        <input type="radio" id="thisYear" name="timeframe" value="6"> <label for="thisYear">Dieses Jahr</label>
        <input type="radio" id="sinceStart" name="timeframe" value="7"> <label for="sinceStart">Seit Beginn</label>
    </div>

    
    <div id="chartContainer">
        <canvas id="myChart"></canvas>
    </div>
    <script>
        $(document).ready(function () {
            $('#originDropdown').change(function () {
                // Get the selected value from the dropdown
                var selectedOrigin = $(this).val();
                var selectedTimeFrame = document.querySelector('input[name="timeframe"]:checked').value;
                // Call the controller action using AJAX
                $.ajax({
                    url: '@Url.Action("UpdateChart", "Dashboard")',
                    type: 'GET',
                    data: { origin: selectedOrigin, timeFrame: selectedTimeFrame },
                    success: function (data) {
                        // Update the chart using the data returned from the controller
                        updateChart(data);
                    },
                    error: function (error) {
                        console.error('Error:', error);
                    }
                });
            });
        });

        // check if timeframe changed
        document.querySelectorAll('input[type=radio][name="timeframe"]').forEach(function (button) {
            button.addEventListener('change', function () {
                var selectedTimeframe = this.value; // Get the selected timeframe value
                var selectedOrigin = document.getElementById('originDropdown').value;
                updateChartWithTimeFrame(selectedTimeframe, selectedOrigin); // Call a function to update the chart
            });
        });

        function updateChartWithTimeFrame(timeframe, origin) {
            $.ajax({
                url: '@Url.Action("GetTimeFrameData", "Dashboard")', // Adjust the URL to match your controller action
                method: 'GET',
                data: { timeframe: timeframe, origin: origin }, // Pass the selected timeframe as a parameter
                success: function (data) {
                    updateChart(data);
                },
                error: function (xhr, status, error) {
                    console.error('Error fetching data:', error);
                }
            });
        }

        function updateChart(data)
        {
            var times = data.times;
            var values = data.values;
            var origin = data.origin;

            myChart.data.datasets[0].label = 'Saldo ' + origin;
            myChart.data.labels = times;
            myChart.data.datasets[0].data = values;
            myChart.update();
        }

        // update on Intervall
        function updateChartData() {
            var selectedOrigin = $('#originDropdown').val();
            var selectedTimeFrame = document.querySelector('input[name="timeframe"]:checked').value;
            $.ajax({
                url: '@Url.Action("GetLatestData", "Dashboard")',
                type: 'GET',
                data: { origin: selectedOrigin, timeFrame: selectedTimeFrame },
                success: function (data) {
                    updateChart(data);
                },
                error: function (error) {
                    console.error('Error fetching latest data:', error);
                }
            });
        }
        // Initial call to fetch and update data
        updateChartData();
        // Set interval to periodically fetch and update data (every 10 seconds in this example)
        setInterval(updateChartData, 10000);

        // The actual Chart code
        var ctx = document.getElementById('myChart').getContext('2d');
        var myChart = new Chart(ctx, {
            type: 'line',
            data: 
            {
                labels: @Html.Raw(Json.Serialize(Model.Times)),
                datasets: [
                    {
                        label: 'Saldo @Model.Origin',
                        data: @Html.Raw(Json.Serialize(Model.Values)),
                        borderColor: '#0000CC',
                        pointBackgroundColor: '#0000CC',
                        borderWidth: 2,
                        pointRadius: 2,
                        fill: false
                    }
                ]
            },
            options: {
                scales: {
                    x: [{
                        type: 'time',
                        time: {
                            unit: 'day'
                        },
                        title: {
                            display: true,
                            text: 'Datum'
                        }
                    }],
                    y: [{
                        scaleLabel: {
                            display: true,
                            labelString: 'Saldo'
                        }
                    }]
                },
                animation: {
                    duration: 0
                }
            }
        });
    </script>
</body>
</html>

